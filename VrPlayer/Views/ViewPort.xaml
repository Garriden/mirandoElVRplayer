<UserControl x:Class="VrPlayer.Views.ViewPort"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:shdr="clr-namespace:VrPlayer.Models.Shaders"
             xmlns:Converters="clr-namespace:VrPlayer.Helpers.Converters"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Viewport3D x:Key="view1" IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased">
            <Viewport3D.Camera>
                <PerspectiveCamera UpDirection="0,1,0" LookDirection="0,0,1" Position="{Binding Path=State.WrapperPlugin.Wrapper.CameraLeftPosition}" FieldOfView="{Binding Path=Fov}" >
                    <PerspectiveCamera.Transform>
                        <Transform3DGroup>
                            <RotateTransform3D>
                                <RotateTransform3D.Rotation>
                                    <QuaternionRotation3D Quaternion="{Binding Path=CameraTransform}">
                                    </QuaternionRotation3D>
                                </RotateTransform3D.Rotation>
                            </RotateTransform3D>
                            <TranslateTransform3D OffsetX="{Binding Path=State.WrapperPlugin.Wrapper.CameraLeftPosition.X}"
                                                          OffsetY="{Binding Path=State.WrapperPlugin.Wrapper.CameraLeftPosition.Y}"
                                                          OffsetZ="{Binding Path=State.WrapperPlugin.Wrapper.CameraLeftPosition.Z}">
                            </TranslateTransform3D>
                        </Transform3DGroup>
                    </PerspectiveCamera.Transform>
                </PerspectiveCamera>
            </Viewport3D.Camera>
            <ModelVisual3D>
                <ModelVisual3D.Content>
                    <AmbientLight Color="White"></AmbientLight >
                </ModelVisual3D.Content>
            </ModelVisual3D>
            <ModelVisual3D Content="{DynamicResource Geometry}">
                <ModelVisual3D.Transform>
                    <Transform3DGroup>
                        <TranslateTransform3D
                                    OffsetX="{Binding Path=State.TrackerPlugin.Tracker.Position.X}"
                                    OffsetY="{Binding Path=State.TrackerPlugin.Tracker.Position.Y}"
                                    OffsetZ="{Binding Path=State.TrackerPlugin.Tracker.Position.Z}">
                        </TranslateTransform3D>
                    </Transform3DGroup>
                </ModelVisual3D.Transform>
            </ModelVisual3D>
        </Viewport3D>
        <Viewport3D x:Key="view2" IsHitTestVisible="False" RenderOptions.EdgeMode="Aliased">
            <Viewport3D.Camera>
                <PerspectiveCamera UpDirection="0,1,0" LookDirection="0,0,1" Position="{Binding Path=State.WrapperPlugin.Wrapper.CameraRightPosition}" FieldOfView="{Binding Path=Fov}">
                    <PerspectiveCamera.Transform>
                        <Transform3DGroup>
                            <RotateTransform3D>
                                <RotateTransform3D.Rotation>
                                    <QuaternionRotation3D Quaternion="{Binding Path=CameraTransform}">
                                    </QuaternionRotation3D>
                                </RotateTransform3D.Rotation>
                            </RotateTransform3D>
                            <TranslateTransform3D OffsetX="{Binding Path=State.WrapperPlugin.Wrapper.CameraRightPosition.X}"
                                                          OffsetY="{Binding Path=State.WrapperPlugin.Wrapper.CameraRightPosition.Y}"
                                                          OffsetZ="{Binding Path=State.WrapperPlugin.Wrapper.CameraRightPosition.Z}">
                            </TranslateTransform3D>
                        </Transform3DGroup>
                    </PerspectiveCamera.Transform>
                </PerspectiveCamera>
            </Viewport3D.Camera>
            <ModelVisual3D>
                <ModelVisual3D.Content>
                    <AmbientLight Color="White"></AmbientLight >
                </ModelVisual3D.Content>
            </ModelVisual3D>
            <ModelVisual3D Content="{DynamicResource Geometry}" />
        </Viewport3D>
        <VisualBrush x:Key="Media"
                     RenderOptions.CachingHint="Cache"
                     RenderOptions.CacheInvalidationThresholdMaximum="2.0"
                     RenderOptions.CacheInvalidationThresholdMinimum="0.5">
            <VisualBrush.Visual>
                <ContentControl Effect="{Binding Path=State.EffectPlugin.Effect}" Content="{Binding Path=Media}" IsHitTestVisible="False" />
            </VisualBrush.Visual>
        </VisualBrush>
        <GeometryModel3D x:Key="Geometry" Geometry="{Binding Path=State.WrapperPlugin.Wrapper.Geometry}">
            <GeometryModel3D.BackMaterial>
                <DiffuseMaterial Brush="{DynamicResource Media}"></DiffuseMaterial>
            </GeometryModel3D.BackMaterial>
        </GeometryModel3D>
        <Converters:CompareStringToVisibilityConverter x:Key="stringToVis" />
    </UserControl.Resources>
    <Border Background="Transparent" MouseDown="Border_MouseDown">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=Config.ViewportLeftRightSpacing}" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding Path=Config.ViewportHorizontalDistance}" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding Path=Config.ViewportLeftRightSpacing}" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Path=Config.ViewportTopBottomSpacing}" />
                <RowDefinition Height="*" />
                <RowDefinition Height="{Binding Path=Config.ViewportVerticalDistance}" />
                <RowDefinition Height="*" />
                <RowDefinition Height="{Binding Path=Config.ViewportTopBottomSpacing}" />
            </Grid.RowDefinitions>

            <!--Experimetal smart grid-->
            <!--<GridSplitter Grid.Column="0" Grid.Row="0" Grid.RowSpan="5" Width="5" Background="DarkGray" VerticalAlignment="Stretch" HorizontalAlignment="Right" />
            <GridSplitter Grid.Column="4" Grid.Row="0" Grid.RowSpan="5" Width="5" Background="DarkGray" VerticalAlignment="Stretch" HorizontalAlignment="Left" />
            <GridSplitter Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" Height="5" Background="DarkGray" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" />
            <GridSplitter Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="5" Height="5" Background="DarkGray" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
            <GridSplitter Grid.Column="2" Grid.Row="0" Grid.RowSpan="5" Width="5" Background="DarkGray" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                          Visibility="{Binding Path=State.StereoOutput, Converter={StaticResource stringToVis}, ConverterParameter=SideBySide}"/>
            <GridSplitter Grid.Column="2" Grid.Row="0" Grid.RowSpan="5" Width="5" Background="DarkGray" VerticalAlignment="Stretch" HorizontalAlignment="Right"
                          Visibility="{Binding Path=State.StereoOutput, Converter={StaticResource stringToVis}, ConverterParameter=SideBySide}"/>
            <GridSplitter Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" Height="5" Background="DarkGray" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                          Visibility="{Binding Path=State.StereoOutput, Converter={StaticResource stringToVis}, ConverterParameter=OverUnder}"/>
            <GridSplitter Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" Height="5" Background="DarkGray" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"
                          Visibility="{Binding Path=State.StereoOutput, Converter={StaticResource stringToVis}, ConverterParameter=OverUnder}"/>-->

            <!--ViewPort 1-->
            <Grid Background="Black" Effect="{Binding Path=State.ShaderPlugin.Shader}"
                    Grid.Column="{Binding Path=Viewport1Col}" 
                    Grid.ColumnSpan="{Binding Path=Viewport1ColSpan}"  
                    Grid.Row="{Binding Path=Viewport1Row}" 
                    Grid.RowSpan="{Binding Path=Viewport1RowSpan}">
                <ContentControl Content="{StaticResource view1}"></ContentControl>
            </Grid>
            <!--ViewPort 2-->
            <Grid Background="Black" Effect="{Binding Path=State.ShaderPlugin.Shader}"
                    Grid.Column="{Binding Path=Viewport2Col}" 
                    Grid.ColumnSpan="{Binding Path=Viewport2ColSpan}" 
                    Grid.Row="{Binding Path=Viewport2Row}" 
                    Grid.RowSpan="{Binding Path=Viewport2RowSpan}">
                <ContentControl Content="{StaticResource view2}"></ContentControl>
            </Grid>
        </Grid>
    </Border>
</UserControl>
